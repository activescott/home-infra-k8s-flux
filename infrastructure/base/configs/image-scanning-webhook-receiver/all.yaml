apiVersion: v1
kind: Service
metadata:
  name: receiver
spec:
  # Exposes the Service on a cluster-internal IP. Choosing this value makes the Service only reachable from within the cluster
  # We expose it externally via an Ingress so that we can match requested domain/url to map here.
  type: ClusterIP
  selector:
    app: notification-controller
  ports:
    - name: http
      port: 9292
      protocol: TCP
      targetPort: 9292
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webhook-receiver
spec:
  tls:
    - hosts:
        - flux-webhook.activescott.com
      secretName: flux-webhook-activescott-com-tls

  rules:
    - host: flux-webhook.activescott.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: webhook-receiver
                # port of the referenced service. A port name or port number is required for a IngressServiceBackend.
                port:
                  number: 9292
---
# policy that permits the traffic from only namespaces with a matching cert-manager label into the challenge pod per https://fluxcd.io/flux/guides/webhook-receivers/
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-cert-manager-resolver
  namespace: "flux-system"
spec:
  podSelector:
    matchLabels:
      acme.cert-manager.io/http01-solver: "true"
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/instance: cert-manager
---
apiVersion: notification.toolkit.fluxcd.io/v1
kind: Receiver
metadata:
  name: webhook-receiver-image
spec:
  type: github
  events:
    - "ping"
    - "package"
  secretRef:
    name: webhook-token
  resources:
    - kind: ImageRepository
      name: repo-tayle-app
    - kind: ImageRepository
      name: repo-tayle-worker
