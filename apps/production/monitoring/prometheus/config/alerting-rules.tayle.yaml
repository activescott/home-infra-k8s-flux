# https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
groups:
  - name: tayle
    #labels:
    #  team: scott
    rules:
      - alert: PodNotReady
        expr: kube_pod_status_ready{exported_namespace="$namespace",pod!~"^db-backup-.*",condition="false"} > 0
        # Alerting rules without the for clause will become active on the first evaluation.
        #for: 10m
        # keep_firing_for clause tells Prometheus to keep this alert firing for the specified duration after the firing condition was last met. Alerting rules without the keep_firing_for clause will deactivate on the first evaluation where the condition is not met (assuming any optional for duration described above has been satisfied).
        # it seems since we scrape very rarely we have to increase this value or it will resolve in 5m.
        #keep_firing_for: 35m
        labels:
          severity: warning
        annotations:
          summary: |
            Tayle Pod not ready. This may pass if it was a momentary deployment or something. See https://grafana.activescott.com/d/cc030cf0-cde1-46c1-bc49-fd5c88d7f002/tayle-prod-status?orgId=1&from=now-12h&to=now&refresh=1m

      - alert: DeploymentNotAvailable
        expr: kube_deployment_status_condition{exported_namespace="$namespace",condition="Available",status="false"}>0
        # Alerting rules without the for clause will become active on the first evaluation.
        #for: 10m
        # keep_firing_for clause tells Prometheus to keep this alert firing for the specified duration after the firing condition was last met. Alerting rules without the keep_firing_for clause will deactivate on the first evaluation where the condition is not met (assuming any optional for duration described above has been satisfied).
        # it seems since we scrape very rarely we have to increase this value or it will resolve in 5m.
        #keep_firing_for: 35m
        labels:
          severity: critical
        annotations:
          summary: |
            Tayle Deployment not available. With a deployment that isn't available Tayle is down! See https://grafana.activescott.com/d/cc030cf0-cde1-46c1-bc49-fd5c88d7f002/tayle-prod-status?orgId=1&from=now-12h&to=now&refresh=1m

      - alert: StatefulSetNotReady
        expr: kube_statefulset_status_replicas_ready{exported_namespace="$namespace"}>0
        # Alerting rules without the for clause will become active on the first evaluation.
        #for: 10m
        # keep_firing_for clause tells Prometheus to keep this alert firing for the specified duration after the firing condition was last met. Alerting rules without the keep_firing_for clause will deactivate on the first evaluation where the condition is not met (assuming any optional for duration described above has been satisfied).
        # it seems since we scrape very rarely we have to increase this value or it will resolve in 5m.
        #keep_firing_for: 35m
        labels:
          severity: critical
        annotations:
          summary: |
            Tayle StatefulSet has no ready replicas. Without a Statefulset that is ready Tayle is down! See https://grafana.activescott.com/d/cc030cf0-cde1-46c1-bc49-fd5c88d7f002/tayle-prod-status?orgId=1&from=now-12h&to=now&refresh=1m
